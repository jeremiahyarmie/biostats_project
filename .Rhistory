knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
#first we have to do a bit of data massaging on the tables from the two reference gwas papers
all_hp <- read.tsv(here("hp_data/hp_gwas_isolates_all_tsv.tsv"))
#first we have to do a bit of data massaging on the tables from the two reference gwas papers
all_hp <- read.table(here("hp_data/hp_gwas_isolates_all_tsv.tsv"))
#first we have to do a bit of data massaging on the tables from the two reference gwas papers
all_hp <- read.(file = here("hp_data/hp_gwas_isolates_all_tsv.tsv"))
#first we have to do a bit of data massaging on the tables from the two reference gwas papers
all_hp <- read.table(file = here("hp_data/hp_gwas_isolates_all_tsv.tsv"))
#first we have to do a bit of data massaging on the tables from the two reference gwas papers
all_hp <- read_tsv(here("hp_data/hp_gwas_isolates_all_tsv.tsv"))
#first we have to do a bit of data massaging on the tables from the two reference gwas papers
all_hp <- read_tsv(here("hp_data/hp_gwas_isolates_all_tsv.tsv"))
#first we have to do a bit of data massaging on the tables from the two reference gwas papers
all_hp <- read_tsv(here("hp_data/hp_gwas_isolates_all_tsv.tsv"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
#first we have to do a bit of data massaging on the tables from the two reference gwas papersd
all_hp <- read_tsv(here("hp_data/hp_gwas_isolates_all_tsv.tsv"))
all_hp
gwas_hp <- read.csv(here("hp_data/hp_gwas_isolates_used_csv.csv"))
gwas_hp
#first we have to do a bit of data massaging on the tables from the two reference gwas papers
#table of all initial isolates they considered using
all_hp <- read_tsv(here("hp_data/hp_gwas_isolates_all_tsv.tsv"))
#table of all isolates they ended up using
gwas_hp <- as_tibble(read.csv(here("hp_data/hp_gwas_isolates_used_csv.csv")))
gwas_hp <-
#first we have to do a bit of data massaging on the tables from the two reference gwas papers
#table of all initial isolates they considered using
all_hp <- read_tsv(here("hp_data/hp_gwas_isolates_all_tsv.tsv"))
#table of all isolates they ended up using
gwas_hp <- as_tibble(read.csv(here("hp_data/hp_gwas_isolates_used_csv.csv")))
#gwas_hp <-
gwas_hp
#first we have to do a bit of data massaging on the tables from the two reference gwas papers
#table of all initial isolates they considered using
all_hp <- read_tsv(here("hp_data/hp_gwas_isolates_all_tsv.tsv"))
#table of all isolates they ended up using
gwas_hp <- as_tibble(read.csv(here("hp_data/hp_gwas_isolates_used_csv.csv")))
gwas_hp <- left_join(gwas_hp, all_hp, by = "isolate")
gwas_hp
print(gwas_hp, n=180)
#first we have to do a bit of data massaging on the tables from the two reference gwas papers
#table of all initial isolates they considered using
all_hp <- read_tsv(here("hp_data/hp_gwas_isolates_all.tsv"))
#table of all isolates they ended up using
gwas_hp <- as_tibble(read.csv(here("hp_data/hp_gwas_isolates_used.csv")))
gwas_hp <- left_join(gwas_hp, all_hp, by = "isolate")
gwas_hp
print(gwas_hp, n=180)
gwas_hp$isolate %>% readr::write_csv(isolate_list, na="")
gwas_hp %>% readr::write_csv(hp_isolate_list, na="")
#first we have to do a bit of data massaging on the tables from the two reference gwas papers
#table of all initial isolates they considered using
all_hp <- read_tsv(here("hp_data/hp_gwas_isolates_all.tsv"))
#table of all isolates they ended up using
gwas_hp <- as_tibble(read.csv(here("hp_data/hp_gwas_isolates_used.csv")))
gwas_hp <- left_join(gwas_hp, all_hp, by = "isolate")
gwas_hp %>% readr::write_csv("hp_isolate_list", na="")
#first we have to do a bit of data massaging on the tables from the two reference gwas papers
#table of all initial isolates they considered using
all_hp <- read_tsv(here("hp_data/hp_gwas_isolates_all.tsv"))
#table of all isolates they ended up using
gwas_hp <- as_tibble(read.csv(here("hp_data/hp_gwas_isolates_used.csv")))
gwas_hp <- left_join(gwas_hp, all_hp, by = "isolate")
gwas_hp %>% readr::write_csv("hp_data/hp_isolate_list", na="")
gwas_hp
print(gwas_hp, n=200)
setwd("~/Desktop/biostats_project")
here()
library(here)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(treeWAS)
library(ape)
mtb_meta_raw <- read_csv(("mtb_data/mtb_meta.csv") #reading in the metadata association with the mtb
mtb_meta_raw <- read_csv("mtb_data/mtb_meta.csv") #reading in the metadata association with the mtb dataset
mtb_meta_raw <- read_csv("mtb_data/mtb_meta.csv") #reading in the metadata association with the mtb dataset
mtb_meta_raw <- read_csv("mtb_data/mtb_meta.csv") #reading in the metadata association with the mtb dataset
mtb_isos_raw <- read_table("mtb_data/mtb_iso_list.txt") #these are all of the isolates used in the analysis
mtb_meta <- select(mtb_meta_raw, isolates, INH, RIF, EMB, STR, CIP, CYS, CAP, ETA, KAN, OFLX, PAS, PZA, AMK, MOXI, PRO, CLO, RBU, LEVO) #pruning down the metadata tree to just include isolates and AMR phenotypes
mtb_meta[mtb_meta == "NULL"] <- NA #the dataset originally came with NULLs instead of NAs
mtb_isos_meta <- semi_join(mtb_meta, mtb_isos_raw, by = "isolates") #selecting our subset of isolates
#the next section exports each AMR phenotypic column as a vector and associates it to the respective isolates
mtb_phen_inh <- as_vector(mtb_isos_meta$INH)
names(mtb_phen_inh) <- isos_meta$isolates
mtb_phen_inh <- as_vector(mtb_isos_meta$INH)
names(mtb_phen_inh) <- mtb_isos_meta$isolates
mtb_phen_rif <- as_vector(mtb_isos_meta$RIF)
names(mtb_phen_rif) <- isos_meta$isolates
#the next section exports each AMR phenotypic column as a vector and associates it to the respective isolates
mtb_phen_inh <- as_vector(mtb_isos_meta$INH)
names(mtb_phen_inh) <- mtb_isos_meta$isolates
mtb_phen_rif <- as_vector(mtb_isos_meta$RIF)
names(mtb_phen_rif) <- mtb_isos_meta$isolates
mtb_phen_emb <- as_vector(mtb_isos_meta$EMB)
names(mtb_phen_emb) <- mtb_isos_meta$isolates
mtb_phen_str <- as_vector(mtb_isos_meta$STR)
names(mtb_phen_str) <- mtb_isos_meta$isolates
mtb_phen_cip <- as_vector(mtb_isos_meta$CIP)
names(mtb_phen_cip) <- mtb_isos_meta$isolates
mtb_phen_cys <- as_vector(mtb_isos_meta$CYS)
names(mtb_phen_cys) <- mtb_isos_meta$isolates
mtb_phen_cap <- as_vector(mtb_isos_meta$CAP)
names(mtb_phen_cap) <- mtb_isos_meta$isolates
mtb_phen_eta <- as_vector(mtb_isos_meta$ETA)
names(mtb_phen_eta) <- mtb_isos_meta$isolates
mtb_phen_kan <- as_vector(mtb_isos_meta$KAN)
names(mtb_phen_kan) <- mtb_isos_meta$isolates
mtb_phen_oflx <- as_vector(mtb_isos_meta$OFLX)
names(mtb_phen_oflx) <- mtb_isos_meta$isolates
mtb_phen_pas <- as_vector(mtb_isos_meta$PAS)
names(mtb_phen_pas) <- mtb_isos_meta$isolates
mtb_phen_pza <- as_vector(mtb_isos_meta$PZA)
names(mtb_phen_pza) <- mtb_isos_meta$isolates
mtb_phen_amk <- as_vector(mtb_isos_meta$AMK)
names(mtb_phen_amk) <- mtb_isos_meta$isolates
mtb_phen_moxi <- as_vector(mtb_isos_meta$MOXI)
names(mtb_phen_moxi) <- mtb_isos_meta$isolates
mtb_phen_pro <- as_vector(mtb_isos_meta$PRO)
names(mtb_phen_pro) <- mtb_isos_meta$isolates
mtb_phen_clo <- as_vector(mtb_isos_meta$CLO)
names(mtb_phen_clo) <- mtb_isos_meta$isolates
mtb_phen_rbu <- as_vector(mtb_isos_meta$RBU)
names(mtb_phen_rbu) <- mtb_isos_meta$isolates
mtb_phen_levo <- as_vector(mtb_isos_meta$LEVO)
names(mtb_phen_levo) <- mtb_isos_meta$isolates
#next we import our genetic data
mtb_dna <- read.dna(file = "mtb_data/mtb_snv_align.fasta", format = "fasta") #import our multi-aligned fasta of all isolate genome SNVs
mtb_snps <- DNAbin2genind(mtb_dna)@tab #converts all SNVs to a DNA bin matrix
mtb_tree <- read.tree(file = "mtb_data/mtb_tree.nhx") #import out phylogenetic tree created with fastTREE
View(mtb_snps)
#run treeWAS
inh <- treeWAS(snps = mtb_snps,
phen = mtb_phen_inh,
tree = mtb_tree,
seed = 1)
rif <- treeWAS(snps = mtb_snps,
phen = rif,
tree = mtb_tree,
seed = 1)
rif <- treeWAS(snps = mtb_snps,
phen = mtb_phen_rif,
tree = mtb_tree,
seed = 1)
View(inh)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(treeWAS)
library(ape)
rif <- treeWAS(snps = mtb_snps,
phen = mtb_phen_rif,
tree = mtb_tree,
seed = 1)
emb <- treeWAS(snps = mtb_snps,
phen = mtb_phen_emb,
tree = mtb_tree,
seed = 1)
str <- treeWAS(snps = mtb_snps,
phen = mtb_phen_str,
tree = mtb_tree,
seed = 1)
cip  <- treeWAS(snps = mtb_snps,
phen = mtb_phen_cip,
tree = mtb_tree,
seed = 1)
mtb_phen_cip
view(mtb_phen_cip)
cys  <- treeWAS(snps = mtb_snps,
phen = mtb_phen_cys,
tree = mtb_tree,
seed = 1)
mtb_snps
cys  <- treeWAS(snps = mtb_snps,
phen = mtb_phen_cys,
tree = mtb_tree,
seed = 1)
mtb_phen_cys
view(mtb_phen_cys)
cap  <- treeWAS(snps = mtb_snps,
phen = mtb_phen_cap,
tree = mtb_tree,
seed = 1)
eta  <- treeWAS(snps = mtb_snps,
phen = mtb_phen_eta,
tree = mtb_tree,
seed = 1)
kan  <- treeWAS(snps = mtb_snps,
phen = mtb_phen_kan,
tree = mtb_tree,
seed = 1)
oflx   <- treeWAS(snps = mtb_snps,
phen = mtb_phen_oflx,
tree = mtb_tree,
seed = 1)
pas  <- treeWAS(snps = mtb_snps,
phen = mtb_phen_pas,
tree = mtb_tree,
seed = 1)
view(mtb_phen_pas)
pza  <- treeWAS(snps = mtb_snps,
phen = mtb_phen_pza,
tree = mtb_tree,
seed = 1)
mtb_phen_pza
view(mtb_phen_pza)
amk  <- treeWAS(snps = mtb_snps,
phen = mtb_phen_amk,
tree = mtb_tree,
seed = 1)
view(mtb_phen_amk)
moxi  <- treeWAS(snps = mtb_snps,
phen = mtb_phen_moxi,
tree = mtb_tree,
seed = 1)
view(mtb_phen_moxi)
pro  <- treeWAS(snps = mtb_snps,
phen = mtb_phen_pro,
tree = mtb_tree,
seed = 1)
mtb_phen_pro
clo  <- treeWAS(snps = mtb_snps,
phen = mtb_phen_clo,
tree = mtb_tree,
seed = 1)
mtb_phen_clo
rbu  <- treeWAS(snps = mtb_snps,
phen = mtb_phen_rbu,
tree = mtb_tree,
seed = 1)
levo  <- treeWAS(snps = mtb_snps,
phen = mtb_phen_levo,
tree = mtb_tree,
seed = 1)
cap$treeWAS.combined
emb$treeWAS.combined
eta$treeWAS.combined
inh$treeWAS.combined
kan$treeWAS.combined
oflx$treeWAS.combined
rif$treeWAS.combined
str$treeWAS.combined
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(treeWAS)
library(ape)
mtb_cols <- c("position","phenotype","score1", "score2", "score3","known")
mtb_results <- tibble(mtb_cols)
mtb_results
loci <- c(3696, 3833, 7296, 8943, 17249)
rifR <- c(T, T, F, T, F)
oflxR <- c(T, F, F, F, F)
kanR <- c(T, F, F, F, F)
inhR <- c(T, F, F, T, F)
etaR <- c(T, T, T, F, F)
embR <- c(T, T, F, F, T)
strR <- c(F, T, F, F, F)
known_loci <- c(NA, NA, NA, NA, NA)
mtb_results <- tibble(loci, rifR, oflxR, kanR, inhR, etaR, embR, strR, known_loci)
mtb_results
annotation <- c(NA, NA, NA, NA, NA)
mtb_results <- tibble(loci, rifR, oflxR, kanR, inhR, etaR, embR, strR, known_loci, annotation)
mtb_results
mtb_snps
view(mtb_snps)
mtb_dna
hp_meta_raw <- read_csv("hp_data/hp_gwas_isolates_used.csv")
view(hp_meta_raw)
hp_phen <- as_vector(hp_meta_raw$gwas_group)
name(hp_phen) <- hp_meta_raw$isolate
names(hp_phen) <- hp_meta_raw$isolate
hp_phen
view(hp_phen)
hp_phen[hp_phen == "Non Atrophic Gastritis"] <- 1
hp_phen[hp_phen == "Progressive towards Cancer"] <- 2
hp_phen[hp_phen == "Gastric Cancer"] <- 3
hp_phen
view(hp_meta_raw)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(treeWAS)
library(ape)
mtb_results <- tibble(loci, rifR, oflxR, kanR, inhR, etaR, embR, strR, pca-lmm-GWAS, annotation)
pca-lmm-GWAS <- c(NA, NA, NA, NA, NA)
pca_lmm_GWAS <- c(NA, NA, NA, NA, NA)
annotation <- c(NA, NA, NA, NA, NA)
mtb_results <- tibble(loci, rifR, oflxR, kanR, inhR, etaR, embR, strR, pca_lmm_GWAS, annotation)
mtb_results
loci <- c(3696, 3833, 7296, 8943, 17249)
rifR <- c(T, T, F, T, F)
oflxR <- c(T, F, F, F, F)
kanR <- c(T, F, F, F, F)
inhR <- c(T, F, F, T, F)
etaR <- c(T, T, T, F, F)
embR <- c(T, T, F, F, T)
strR <- c(F, T, F, F, F)
pca_lmm_GWAS <- c(NA, NA, NA, NA, NA)
annotation <- c("rpoB", "rpsL", "fabG1", "lldD2", "embA")
mtb_results <- tibble(loci, rifR, oflxR, kanR, inhR, etaR, embR, strR, pca_lmm_GWAS, annotation)
mtb_results
pca_lmm_GWAS <- c(T, F, T, F, T)
annotation <- c("rpoB", "rpsL", "fabG1", "lldD2", "embA")
mtb_results <- tibble(loci, rifR, oflxR, kanR, inhR, etaR, embR, strR, pca_lmm_GWAS, annotation)
mtb_results
gene <- c("rpoB", "rpsL", "fabG1", "lldD2", "embA")
annotation <- c("RNA polB","small ribosomal protein","3-oxoacyl-ACP reductase","L-lactate dehydrogenase","arabinosyltransferase")
mtb_results <- tibble(loci, rifR, oflxR, kanR, inhR, etaR, embR, strR, pca_lmm_GWAS, gene, annotation)
mtb_results
cap$dat
phen$combined
cap$treeWAS.combined
eta$treeWAS.combined
view mtb_isos_meta
view(mtb_isos_meta)
library(dplyr)
library(tidyverse)
view(mtb_isos_meta)
view(mtb_phen_levo)
view(mtb_phen_cap)
view(mtb_dna)
mtb_dna
view(mtb_snps)
emb
emb$treeWAS.combined
cap$score
cap$SCORE
emb$SCORE
emb$[SCORE]
print(emb)
emb$terminal
emb$subsequent
emb$simultaneous
emb$treeWAS.combined
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(treeWAS)
library(ape)
mtb_dna <- read.dna(file = here("mtb_data/mtb_snv_align.fasta"), format = "fasta") #import our multi-aligned FASTA of all isolate genome SNVs
